@page "/blazorjs"
@rendermode InteractiveServer
@inject IJSRuntime _JSRuntime

<h3>Blazor JS</h3>

<div class="row">
  <button class="btn btn-secondary" @onclick="TestConfirmBox">Test Confirm Button</button>
</div>

<div class="row">
  @if (ConfirmResult)
  {
    <p>Confirmation has been made!</p>
  }
  else
  {
    <p>Pending Confirmation.</p>
  }
</div>

<div class="row">
  <button class="btn btn-success m-2" style="width:200px" @onclick="ToastrSuccess">Toastr Success</button>
  <button class="btn btn-danger m-2" style="width:200px" @onclick="ToastrError">Toastr Failure</button>
</div>

<div class="row">
  <button class="btn btn-success m-2" style="width:200px" @onclick="SweetAlertSuccess">Sweetalert Success</button>
  <button class="btn btn-danger m-2" style="width:200px" @onclick="SweetAlertError">Sweetalert Failure</button>
</div>

@code {
  private string ConfirmMessage = "Are you sure you want to click here?";
  private bool ConfirmResult { get; set; }
  private async Task TestConfirmBox()
  {
    // Trigger confirm function of Js of Web
    ConfirmResult = await _JSRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
  }

  private async Task ToastrSuccess()
  {
    //await _JSRuntime.InvokeVoidAsync("showToaster", "success", "Success Notification");
    await _JSRuntime.ToastrSuccess("Success Notification");
  }
  private async Task ToastrError()
  {
    //await _JSRuntime.InvokeVoidAsync("showToaster", "error", "Error Notification");
    await _JSRuntime.ToastrError("Error Notification");
  }

  private async Task SweetAlertSuccess()
  {
    await _JSRuntime.InvokeVoidAsync("showSweerAlert", "success", "Sucess Alert");
  }

  private async Task SweetAlertError()
  {
    await _JSRuntime.InvokeVoidAsync("showSweerAlert", "error", "Error Alert");
  }
}